@use './Button18Settings' as settings;

@mixin transition() {
  transition-duration: settings.$transition-duration;
  transition-timing-function: settings.$transition-timing-function;
}

.button {
  position: relative;

  border-radius: settings.$border-radius;
  overflow: hidden;

  cursor: pointer;
}

.contentWrapper {
  display: inline-block;

  font-size: settings.$font-size;
  line-height: 1;
  letter-spacing: settings.$letter-spacing;
  font-weight: settings.$font-weight;
  text-transform: settings.$text-transform;

  padding: settings.$padding;
  border: settings.$border-width solid transparent;

  color: settings.$text-color;
  border-color: settings.$border-color;

  @include transition();
  transition-property: color;
}
.button:hover .contentWrapper {
  color: settings.$text-color-on-hover;
}

.background {
  position: absolute;
  z-index: -1;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  border-radius: settings.$border-radius;

  background-color: settings.$background-color;
}

.movingBorder {
  position: absolute;
  z-index: 1;

  border-radius: settings.$border-radius;

  background-color: settings.$border-color-on-hover;

  pointer-events: none;
  @include transition();
  transition-property: translate;
}
.button:hover .movingBorder {
  translate: 0 0;
}

.movingBorderTop {
  @extend .movingBorder;

  top: 0;
  left: 0;

  width: 100%;
  height: settings.$border-width;

  translate: -100% 0;
}
.movingBorderBottom {
  @extend .movingBorder;

  bottom: 0;
  left: 0;

  width: 100%;
  height: settings.$border-width;

  translate: 100% 0;
}
.movingBorderLeft {
  @extend .movingBorder;

  top: 0;
  left: 0;

  width: settings.$border-width;
  height: 100%;

  translate: 0 100%;
}
.movingBorderRight {
  @extend .movingBorder;

  top: 0;
  right: 0;

  width: settings.$border-width;
  height: 100%;

  translate: 0 -100%;
}
