@use './Button17Settings' as settings;

@mixin transition() {
  transition-duration: settings.$transition-duration;
  transition-timing-function: settings.$transition-timing-function;
}

.button {
  position: relative;

  border: settings.$border-width solid currentColor;
  border-radius: settings.$border-radius;

  border-color: settings.$border-color;

  cursor: pointer;
}

.contentWrapper {
  display: inline-block;

  font-size: settings.$font-size;
  line-height: 1;
  font-weight: settings.$font-weight;

  padding: settings.$padding;

  color: settings.$text-color;

  @include transition();
  transition-property: color;
}
.button:hover .contentWrapper {
  color: settings.$text-color-on-hover;
}

.contentWrapper :first-child {
  display: inline-block;

  scale: 1;
  translate: 0 0;
  rotate: 0deg;

  @include transition();
  transition-property: scale, translate, rotate;
}
.button:hover .contentWrapper :first-child {
  scale: settings.$scale-first-letter-on-hover;
  translate: settings.$translate-first-letter-on-hover;
  rotate: 360deg;
}

.background {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  border-radius: settings.$border-radius;
}

.normalBackground {
  @extend .background;

  z-index: -2;

  background-color: settings.$background-color;
}

.hoveringBackground {
  @extend .background;

  z-index: -1;

  rotate: 0deg;

  background-color: settings.$background-color-on-hover;
  opacity: 0;

  @include transition();
  transition-property: rotate, opacity;
}
.button:hover .hoveringBackground {
  rotate: settings.$rotate-on-hover;

  opacity: 1;
}
