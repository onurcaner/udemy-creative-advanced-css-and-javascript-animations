@use './Button16Settings' as settings;

@mixin transition() {
  transition-duration: settings.$transition-duration;
  transition-timing-function: settings.$transition-timing-function;
}

.button {
  position: relative;
  z-index: 0;

  cursor: pointer;

  border: settings.$border-width solid currentColor;
  border-radius: settings.$border-radius;

  border-color: settings.$border-color;
}

.contentWrapper {
  display: inline-block;

  font-size: settings.$font-size;
  line-height: 1;
  font-weight: settings.$font-weight;

  padding: settings.$padding;

  color: settings.$text-color;

  @include transition();
  transition-property: color;
}
.button:hover .contentWrapper {
  color: settings.$text-color-on-hover;
}

.background {
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  background-color: settings.$background-color;

  @include transition();
  transition-property: background-color;
}
.button:hover .background {
  background-color: settings.$background-color-on-hover;
}

.movingBorder {
  position: absolute;

  border-radius: settings.$border-radius;

  background-color: settings.$border-color;

  pointer-events: none;
  @include transition();
  transition-property: width, height;
}

.movingBorderTop {
  @extend .movingBorder;

  top: -3 * settings.$border-width;
  left: -3 * settings.$border-width;

  width: settings.$border-length-offset;
  height: settings.$border-width;
}
.button:hover .movingBorderTop {
  width: calc(100% - settings.$border-length-offset);
}

.movingBorderBottom {
  @extend .movingBorder;

  bottom: -3 * settings.$border-width;
  right: -3 * settings.$border-width;

  width: settings.$border-length-offset;
  height: settings.$border-width;
}
.button:hover .movingBorderBottom {
  width: calc(100% - settings.$border-length-offset);
}

.movingBorderLeft {
  @extend .movingBorder;

  top: -3 * settings.$border-width;
  left: -3 * settings.$border-width;

  width: settings.$border-width;
  height: settings.$border-length-offset;
}
.button:hover .movingBorderLeft {
  height: calc(100% - settings.$border-length-offset);
}

.movingBorderRight {
  @extend .movingBorder;

  bottom: -3 * settings.$border-width;
  right: -3 * settings.$border-width;

  width: settings.$border-width;
  height: settings.$border-length-offset;
}
.button:hover .movingBorderRight {
  height: calc(100% - settings.$border-length-offset);
}
