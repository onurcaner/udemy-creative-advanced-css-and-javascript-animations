@use './Button4Settings' as settings;

@mixin transition() {
  transition-duration: settings.$transition-duration;
  transition-timing-function: settings.$transition-timing-function;
}

.button {
  position: relative;

  display: grid;
  align-content: center;
  justify-content: center;
  align-items: stretch;
  justify-items: stretch;

  border-radius: settings.$border-radius;

  background-color: settings.$background-color;

  cursor: pointer;
}

.contentWrapper {
  grid-area: 1 / 1 / -1 / -1;

  font-size: settings.$font-size;
  line-height: 1;
  font-weight: settings.$font-weight;
  text-transform: settings.$text-transform;
  letter-spacing: settings.$letter-spacing;

  padding: settings.$padding;

  color: settings.$text-color;

  @include transition();
  transition-property: font-weight, letter-spacing, color;
}
.button:hover .contentWrapper {
  font-weight: settings.$font-weight-on-hover;
  letter-spacing: settings.$letter-spacing-on-hover;

  color: settings.$text-color-on-hover;
}

.borderBackground {
  position: relative;
  z-index: -1;
  grid-area: 1 / 1 / -1 / -1;

  width: calc(100% + (settings.$border-width * 2));
  height: calc(100% + (settings.$border-width * 2));
  border-radius: settings.$border-radius;

  translate: (settings.$border-width * -1) (settings.$border-width * -1);

  background-color: settings.$border-color;

  @include transition();
  transition-property: width, height, translate, background-color;
}
.button:hover .borderBackground {
  width: calc(100% + (settings.$border-width-on-hover * 2));
  height: calc(100% + (settings.$border-width-on-hover * 2));

  translate: (settings.$border-width-on-hover * -1)
    (settings.$border-width-on-hover * -1);

  background-color: settings.$border-color-on-hover;
}
