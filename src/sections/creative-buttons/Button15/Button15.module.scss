@use './Button15Settings' as settings;

@mixin transition($keyframe-span) {
  transition-duration: settings.$transition-duration * $keyframe-span * 0.5;
  transition-timing-function: ease-out;
}

@mixin transition-delay($keyframe-count) {
  transition-delay: settings.$transition-duration * $keyframe-count * 0.5;
}

.button {
  position: relative;

  cursor: pointer;
}

.contentWrapper {
  display: inline-block;

  font-size: settings.$font-size;
  line-height: 1;
  font-weight: settings.$font-weight;

  padding: settings.$padding;
  border: settings.$border-width solid transparent;

  color: settings.$text-color;
}

.background,
.borders {
  position: absolute;
  top: 0;
  left: 0;
}

.background {
  z-index: -2;

  width: 100%;
  height: 100%;

  background-color: settings.$background-color;
}

.borders {
  z-index: -1;

  display: grid;

  pointer-events: none;
  @include transition(1);
  transition-property: rotate;

  :first-child,
  :last-child {
    border-radius: settings.$border-radius;
  }
  :first-child {
    background-color: settings.$border-color-1;
  }
  :last-child {
    background-color: settings.$border-color-2;
  }
}

.inlineBorders {
  @extend .borders;

  grid-template-columns: settings.$border-width 1fr settings.$border-width;

  width: 100%;
  height: calc(100% + 4 * settings.$border-width);

  translate: 0 (-2 * settings.$border-width);
  rotate: 0 1 0 0deg;

  @include transition-delay(1);
}
.button:hover .inlineBorders {
  rotate: 0 1 0 180deg;

  @include transition-delay(0);
}

.blockBorders {
  @extend .borders;

  grid-template-rows: settings.$border-width 1fr settings.$border-width;

  height: 100%;
  width: calc(100% + 4 * settings.$border-width);

  translate: (-2 * settings.$border-width) 0;
  rotate: 1 0 0 0deg;

  @include transition-delay(0);
}
.button:hover .blockBorders {
  rotate: 1 0 0 180deg;

  @include transition-delay(1);
}
