@use './Button20Settings' as settings;

$border-radius: 1px;

@mixin transition() {
  transition-duration: settings.$transition-duration;
  transition-timing-function: settings.$transition-timing-function;
}

.button {
  position: relative;

  backdrop-filter: opacity(1);

  cursor: pointer;
}

.contentWrapper {
  display: inline-block;

  font-size: settings.$font-size;
  line-height: 1;
  font-weight: settings.$font-weight;
  letter-spacing: settings.$letter-spacing;
  text-transform: settings.$text-transform;

  padding: settings.$padding;

  color: settings.$text-color;
}

.backgroundFragment {
  position: absolute;
  z-index: -1;
  top: 0;

  width: 50%;
  height: 100%;

  translate: 0 0;

  mix-blend-mode: screen;

  @include transition();
  transition-property: left, border-radius, translate, transform;
}
.button:hover .backgroundFragment {
  border-radius: settings.$border-radius;

  transform: skewX(settings.$skewing-angle);
}

.leftBackgroundFragment {
  @extend .backgroundFragment;

  left: 0;

  border-radius: settings.$border-radius 0 0 settings.$border-radius;

  background-color: settings.$background-color-1;
}
.button:hover .leftBackgroundFragment {
  left: 50%;

  translate: settings.$background-offset settings.$background-offset;
}

.rightBackgroundFragment {
  @extend .backgroundFragment;

  left: 50%;

  border-radius: 0 settings.$border-radius settings.$border-radius 0;

  background-color: settings.$background-color-2;
}
.button:hover .rightBackgroundFragment {
  left: 0;

  translate: (-1 * settings.$background-offset)
    (-1 * settings.$background-offset);
}
