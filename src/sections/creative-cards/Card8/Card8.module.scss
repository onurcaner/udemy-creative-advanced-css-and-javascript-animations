@use './Card8Settings' as settings;

@mixin transition($frame-duration) {
  transition-duration: $frame-duration * settings.$transition-duration * 0.5;
  transition-timing-function: settings.$transition-timing-function;
}

.card {
  position: relative;
  z-index: 0;

  display: grid;

  min-height: 100%;

  border-radius: settings.$border-radius;
  overflow: hidden;
  box-shadow: settings.$card-box-shadow;
}

.contentWrapper {
  grid-area: 1 / 1 / -1 / -1;

  display: grid;
  grid-template-rows: 1fr;
  grid-auto-rows: max-content;
  justify-items: center;

  padding: settings.$card-padding-block settings.$card-padding-inline;
}

.imageWrapper {
  position: relative;
  justify-self: stretch;

  min-height: settings.$card-image-min-height +
    (2 * settings.$link-padding-block) + settings.$link-font-size +
    settings.$paragraph-margin-bottom;
  border-radius: settings.$border-radius;
  overflow: hidden;
  box-shadow: settings.$card-image-box-shadow;

  @include transition(2);
  transition-property: min-height;
}
.card:hover .imageWrapper {
  min-height: settings.$card-image-min-height;
}

.image {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  object-position: settings.$card-image-object-position;
  object-fit: cover;

  width: 100%;
  height: 100%;

  background-color: settings.$card-image-background-color;
}

.title {
  font-size: settings.$title-font-size;
  line-height: 1;
  font-weight: settings.$title-font-weight;
  text-transform: settings.$title-text-transform;

  margin-top: settings.$card-image-margin-bottom;
  margin-bottom: settings.$title-margin-bottom;

  color: settings.$title-text-color;
}

.paragraph {
  text-align: center;

  font-size: settings.$paragraph-font-size;
  line-height: settings.$paragraph-line-height;
  font-weight: settings.$paragraph-font-weight;

  max-width: settings.$paragraph-max-width;

  color: settings.$paragraph-text-color;
}

.link {
  display: inline-block;

  font-size: settings.$link-font-size;
  line-height: 1;
  font-weight: settings.$link-font-weight;
  text-transform: settings.$link-text-transform;

  padding: settings.$link-padding-block settings.$link-padding-inline;
  border-radius: settings.$border-radius;
  margin-top: settings.$paragraph-margin-bottom;

  color: settings.$link-text-color;
  background-color: settings.$link-background-color;

  cursor: pointer;
  @include transition(2);
  transition-property:
    font-size, padding-block, margin-top, translate, color, background-color,
    opacity;

  &:hover {
    color: settings.$link-text-color-on-hover;
    background-color: settings.$link-background-color-on-hover;

    @include transition(1);
  }
}

.visibleLink {
  @extend .link;

  position: absolute;
  z-index: 0;
  bottom: settings.$card-padding-block;
  left: 50%;

  translate: -50% calc(100% + settings.$paragraph-margin-bottom);

  opacity: 0;
}
.card:hover .visibleLink {
  translate: -50% 0;

  opacity: 1;
}

.hiddenLink {
  @extend .link;

  font-size: 0;

  padding-block: 0;
  margin-top: 0;

  visibility: hidden;
  opacity: 0;

  pointer-events: none;
}
.card:hover .hiddenLink {
  font-size: settings.$link-font-size;

  padding-block: settings.$link-padding-block;
  margin-top: settings.$paragraph-margin-bottom;
}

.backgroundWrapper {
  position: absolute;
  z-index: -1;
  top: -100%;
  left: -100%;
  bottom: -100%;
  right: -100%;

  display: grid;
  grid-template-rows: repeat(2, 1fr);

  rotate: settings.$card-background-rotation-angle;

  @include transition(2);
  transition-property: rotate;
}
.card:hover .backgroundWrapper {
  rotate: settings.$card-background-rotation-angle-on-hover;
}

.topBackground {
  background-color: settings.$card-top-background-color;
}
.bottomBackground {
  background-color: settings.$card-bottom-background-color;
}
